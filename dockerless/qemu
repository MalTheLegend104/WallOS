run_default () {
	if [[ $(grep -i Microsoft /proc/version) ]]; then
		echo -e "WSL Detected - Running QEMU for Windows"
		qemu-system-x86_64.exe -cdrom ../dist/x86_64/WallOS.iso -cpu max
	else 
		qemu-system-x86_64 -cdrom ../dist/x86_64/WallOS.iso -cpu max
	fi
}

run_with_debug () {
	qemu-system-x86_64 -cdrom ../dist/x86_64/WallOS.iso -s -S
}

run_native () {
	echo -e "Running native QEMU. This should only have an effect if you are using WSL.\nIf you run into an error, or a window does not open, try running again without --native."
	qemu-system-x86_64 -cdrom ../dist/x86_64/WallOS.iso -cpu max
}

run_native_db () {
	echo -e "Running native QEMU. This should only have an effect if you are using WSL.\nIf you run into an error, or a window does not open, try running again without --native."
	qemu-system-x86_64 -cdrom ../dist/x86_64/WallOS.iso -s -S -cpu max
}

./build64
echo -e "<------------Running QEMU------------->"

native_flag_found=false
debug=false

# See if native was included in the args
for arg in "$@"; do
  if [[ "$arg" == "--native" || "$arg" == "-n" ]]; then
    native_flag_found=true
  fi
  if [[ "$arg" == "--debug" || "$arg" == "-db" ]]; then
    debug=true
  fi 
done

# Check the value of the native_flag_found variable outside the loop
if [ "$native_flag_found" = true ]; then
  	if [ "$debug" = true ]; then
		echo "Running with debug config. Connect using GDB on port \`localhost:1234\`"
		run_native_db
	else
		run_native
	fi
else
	if [ "$debug" = true ]; then
		echo "Running with debug config. Connect using GDB on port `localhost:1234`"
		run_with_debug
	else
		run_default
	fi
fi